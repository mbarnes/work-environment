#!/bin/bash
#
# Pretty-prints environment variables and other helpful messages
# describing the current OCM and Kubernetes context.
#
# This is shown when calling "source cluster CLUSTERID", but is
# split into a separate command for convenience (e.g. the prior
# output has scrolled out of view).
#

if [[ -v CLUSTERID ]]
then
  if [[ -v AWS_PROFILE ]]
  then
    # OpenShift v3 context
    echo "         CLUSTERID : $CLUSTERID"
    echo "       AWS_PROFILE : $AWS_PROFILE"
    echo "AWS_DEFAULT_REGION : $AWS_DEFAULT_REGION"
  elif [[ -v ARO_RESOURCE_GROUP ]]
  then
    # OpenShift v4 context
    echo "          CLUSTERID : $CLUSTERID"
    echo "       ARO_LOCATION : $ARO_LOCATION"
    echo " ARO_RESOURCE_GROUP : $ARO_RESOURCE_GROUP"
  elif [[ -v OCM_CLUSTERID ]]
  then
    # OpenShift v4 context
    echo "         CLUSTERID : $CLUSTERID"
    echo "     OCM_CLUSTERID : $OCM_CLUSTERID"
    echo "        OCM_CONFIG : $OCM_CONFIG"
    echo "AWS_DEFAULT_REGION : $AWS_DEFAULT_REGION"

    echo
    if [[ "$(get-cluster-var $CLUSTERID api.listening)" == "internal" ]]
    then
      case $(hostname) in
        bastion-*.ops.openshift.com)
          echo "API service is internal (use 'sshproxy')"
          echo
          echo "Run \"token\" to obtain a login token."
          ;;
        *)
          echo "API service is internal (use 'ocm tunnel')"
          echo
          echo "Run \"srelogin\" once an SSH tunnel is established."
          ;;
      esac
    else
      case $(hostname) in
        bastion-*.ops.openshift.com)
          echo "Run \"token\" to obtain a login token."
          ;;
        *)
          echo "Run \"srelogin\" to login."
          ;;
      esac
    fi
  fi
fi
