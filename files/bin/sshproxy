#!/bin/bash
#
# Attempts to establish a local SOCKS5 proxy on a unique port
# for the specified cluster.  Optionally, the port number can
# be specified explicitly.
#
# Usage: sshproxy [OCM_CLUSTERID] [PORT]
#

set -euo pipefail

set +u
OCM_CLUSTERID=${1:-$OCM_CLUSTERID}
set -u
if [[ -z "$OCM_CLUSTERID" ]]
then
  echo "Usage: $0 <ocm-clusterid> [<port>]" > /dev/stderr
  exit 1
fi

case $(hostname) in
  bastion-*.ops.openshift.com)
    JUMPHOST_OPTION=""
    ;;
  *)
    JUMPHOST_OPTION="-J bastion-nasa-1.ops.openshift.com"
    ;;
esac

PROXY_PORT=${2:-$(find-proxy-port $OCM_CLUSTERID)}
PROXY_URL="socks5://localhost:$PROXY_PORT"
echo "HTTPS_PROXY=$PROXY_URL"

TMUX_CLUSTER_FILE=$(tmux-cluster-file)
if [[ -n "$TMUX_CLUSTER_FILE" ]]
then
  sed --in-place --regexp-extended --expression='/^(oc|osdctl|srelogin)\(\) \{/d' $TMUX_CLUSTER_FILE
  trap "sed --in-place --regexp-extended --expression='/^(oc|osdctl|srelogin)\(\) \{/d' $TMUX_CLUSTER_FILE" exit
  echo "oc() { HTTPS_PROXY=$PROXY_URL $(which oc) \$@; }; export -f oc" >> $TMUX_CLUSTER_FILE
  echo "ocm() { if [ \$1 == 'backplane' ]; then HTTPS_PROXY=$PROXY_URL $(which ocm) \$@; else $(which ocm) \$@; fi }; export -f ocm" >> $TMUX_CLUSTER_FILE
  echo "osdctl() { HTTPS_PROXY=$PROXY_URL $(which osdctl) \$@; }; export -f osdctl" >> $TMUX_CLUSTER_FILE
  echo "srelogin() { $(which srelogin) --socks-proxy=$PROXY_URL \$@; }; export -f srelogin" >> $TMUX_CLUSTER_FILE
fi

ssh -4 -D $PROXY_PORT $JUMPHOST_OPTION $(sshaddress $OCM_CLUSTERID)
