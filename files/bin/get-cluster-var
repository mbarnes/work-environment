#!/bin/bash
#
# Retrieves a cluster variable from locally cached files created by
# update-v3-cluster-cache or update-ocm-cluster-cache.
#
# For v3 clusters, this command is generally not called directly, but
# through one of the "oo" commands (oo_account, oo_environment, etc).
#
#   get-cluster-var CLUSTERID [VARNAME]
#
# The program can also be used as a silent validity test for a CLUSTERID
# by omitting the VARNAME argument, although this only really indicates
# whether a locally cached file exists for it.
#

set -euo pipefail

XDG_DATA_HOME=${XDG_DATA_HOME:-$HOME/.local/share}

source "$XDG_DATA_HOME/work-environment/functions.sh"

set +u
CLUSTER=$1
VARNAME=$2
set -u
if [[ -z $CLUSTER ]]
then
    echo "Usage: $0 <clusterid> [<varname>]" > /dev/stderr
    exit 1
fi

CACHE_FILE=$(cluster_cache_file_exact $CLUSTER)
if [[ -f "$CACHE_FILE" ]]
then
  if [[ -n "$VARNAME" ]]
  then
    jq --raw-output ".$VARNAME" $CACHE_FILE
  fi
else
  # cluster_cache_file_exact handles the error message.
  exit 1
fi
